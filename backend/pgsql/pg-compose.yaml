name: bons-fluidos-db
services:
  postgres:
    container_name: postgresql-17.5
    build:
      context: .
      dockerfile: pg-dockerfile
    image: postgres-br:1.0
    env_file:
      - ./docker.env
    environment:
      - POSTGRES_DB=bons_fluidos
      - PGDATA=/var/lib/postgresql/17.5/docker
      - TZ="America/Sao_Paulo"
      - POSTGRES_USER=bonsfluidos_user
      - POSTGRES_PASSWORD=PgS3cr3tD3v2025
    ports:
      - 5432:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/17.5/docker
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - pg-net
  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4:latest
    env_file:
      - ./docker.env
    ports:
      - 2020:80
    networks:
    - pg-net
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin

  # --- NOVO SERVIÇO PARA O SEU BACKEND ---
  backend: # <--- Nome do serviço do seu backend
    container_name: bons-fluidos-backend # Opcional, nome para o contêiner
    build:
      context: .. # <--- CONTEXTO: Volta uma pasta para a pasta 'backend'
      dockerfile: Dockerfile # Procura o Dockerfile que você criou na pasta 'backend'
    env_file:
      - ../.env # <--- O .env do seu backend está na pasta 'backend'
    ports:
      - "3000:3000" # Mapeia a porta 3000 do host para a porta 3000 do contêiner
    networks:
      - pg-net
    depends_on:
      - postgres # Garante que o postgres inicie antes do backend

networks:
  pg-net:
    name: pg-net
    driver: bridge